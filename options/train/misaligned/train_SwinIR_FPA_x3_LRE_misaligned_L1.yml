# general settings
name: SwinIR_FPAx3_scratch_DIV2K_LRE_misaligned_L1
model_type: LRESRModel
scale: 3
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: DIV2K
    type: PairedMetaImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_train_HR_sub_misaligned
    dataroot_lq: datasets/DIV2K/DIV2K_train_LR_bicubic/X3_sub
    dataroot_meta_gt: datasets/DIV2K/DIV2K_meta_HR_sub
    dataroot_meta_lq: datasets/DIV2K/DIV2K_meta_LR_bicubic/X3_sub
    io_backend:
      type: disk

    gt_size: 120
    use_hflip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 64
    dataset_enlarge_ratio: 10
    prefetch_mode: ~

  val:
    name: DIV2K
    type: PairedImageDataset
    dataroot_gt: datasets/DIV2K/DIV2K_valid_HR_sub
    dataroot_lq: datasets/DIV2K/DIV2K_valid_LR_bicubic/X3_sub
    io_backend:
      type: disk

# network structures
network_g:
  type: SwinIR_FPA
  upscale: 3
  in_chans: 3
  img_size: 48
  window_size: 8
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  embed_dim: 180
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'


# path
path:
  pretrain_network_g: ~
  strict_load_g: False
  resume_state: ~ # path to the checkpoint e.g) /home/kanghyun/MisalignSR/experiments/RCANx3_scratch_DIV2K_LRE_misaligned/training_states/60000.state

# training settings
train:
  ema_decay: 0.999
  weight_vis: True
  start_meta: 5000 # start meta learning (LRE) after 10000 iterations
  meta_loss: L1

  optim_g:
    type: Adam
    lr: !!float 1e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [100000]
    gamma: 0.5

  total_iter: 150000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

val:
  val_freq: !!float 5e3
  save_img: True

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

    ssim: # metric name, can be arbitrary
        type: calculate_ssim
        crop_border: 4
        test_y_channel: false


# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: True
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
