# general settings
name: RCANx2_scratch_DRONE_misaligned
# suffix: ~  # add suffix to saved images
model_type: SRModel
scale: 2
crop_border: ~  # crop border when evaluation. If None, crop the scale pixels
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 0

# dataset and data loader settings
datasets:
  test_1:  # the 1st test dataset
    name: DRONE
    type: PairedImageDataset
    dataroot_gt: datasets/DRONE/DRONE_valid_HR_X2_sub
    dataroot_lq: datasets/DRONE/DRONE_valid_LR_real/X50_9_sub
    io_backend:
      type: disk
  # test_2:  # the 2nd test dataset
  #   name: val_set14
  #   type: PairedImageDataset
  #   dataroot_gt: ./datasets/val_set14/Set14
  #   dataroot_lq: ./datasets/val_set14/Set14_bicLRx4
  #   io_backend:
  #     type: disk

  # test_3:
  #   name: div2k100
  #   type: PairedImageDataset
  #   dataroot_gt: ./datasets/DIV2K100/DIV2K_valid_HR
  #   dataroot_lq: ./datasets/DIV2K100/DIV2K_valid_bicLRx4
  #   filename_tmpl: '{}x4'
  #   io_backend:
  #     type: disk
  # val:
  #   name: DIV2K
  #   type: PairedImageDataset
  #   dataroot_gt: datasets/DIV2K/DIV2K_valid_HR_sub
  #   dataroot_lq: datasets/DIV2K/DIV2K_valid_LR_bicubic/X3_sub
  #   io_backend:
  #     type: disk

# network structures
network_g:
  type: RCAN
  num_in_ch: 3
  num_out_ch: 3
  num_feat: 64
  num_group: 10
  num_block: 15
  squeeze_factor: 16
  upscale: 2
  res_scale: 1
  img_range: 255.
  rgb_mean: [0.4488, 0.4371, 0.4040]

# path
path:
  pretrain_network_g: ./experiments/RCANx2_scratch_DRONE_misaligned/models/net_g_latest.pth
  strict_load_g: true
  resume_state: ~

val:
  suffix: ~
  save_img: True
  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 4
      test_y_channel: false

    ssim: # metric name, can be arbitrary
        type: calculate_ssim
        crop_border: 4
        test_y_channel: false
